package view;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import baker.ProcessOrder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zsombor
 */
public class BakerView extends javax.swing.JFrame {

    private ArrayList<ProcessOrder> cooking = new ArrayList<>();
    private ArrayList<ProcessOrder> completed = new ArrayList<>();
    private int currentlyBaking;

    /**
     * Creates new form BakerView
     */
    public BakerView() {
        initComponents();
        lstCooking.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lstFinished.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        btnFinished.setVisible(false);
        getContentPane().setBackground(new Color(0, 204, 204));
        setSize(200,600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstCooking = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstFinished = new javax.swing.JList();
        btnFinished = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBake = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(lstCooking);

        jScrollPane2.setViewportView(lstFinished);

        btnFinished.setText("Klar");
        btnFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishedActionPerformed(evt);
            }
        });

        btnRemove.setText("Hämtad");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel1.setText("Tillagas");

        jLabel2.setText("Hämta");

        btnBake.setText("Baka");
        btnBake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBakeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnRemove, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnBake, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnFinished, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btnFinished)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBake)
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemove)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        try {
            String selectedString = lstFinished.getSelectedValue().toString();
            int selected = Integer.parseInt(selectedString);

            for (ProcessOrder po : completed) {
                if (selected == po.getOrderNr()) {
                    JOptionPane.showMessageDialog(null, "Order Nr.: " + po.getOrderNr() + "\n" + po.getReceipt());
                    completed.remove(po);
                }
            }
        } catch (Exception e) {

        }
        setLists();

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishedActionPerformed

        try {
            String selectedString = lstCooking.getSelectedValue().toString();
            char valueAsChar = selectedString.charAt(0);
            int selected = Character.getNumericValue(valueAsChar);
            for (ProcessOrder po : cooking) {
                if (selected == po.getOrderNr()) {
                    completed.add(po);
                }
            }

            for (int i = 0; i < cooking.size(); i++) {
                if (cooking.get(i).getOrderNr() == selected) {
                    cooking.remove(i);
                }
            }
            for (ProcessOrder po : cooking) {
                System.out.println(po.getReceipt());
            }

        } catch (Exception e) {

        }
        setLists();
        lstFinished.setSelectedIndex(0);
    }//GEN-LAST:event_btnFinishedActionPerformed

    private void btnBakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBakeActionPerformed

        try{
        Timer timer = new Timer("Timer");
        String selectedValue = lstCooking.getSelectedValue().toString();
        int selectedIndex = lstCooking.getSelectedIndex();
        char valueAsChar = selectedValue.charAt(0);
        int selected = Character.getNumericValue(valueAsChar);
        this.currentlyBaking = selected;
        int seconds = 0;

        for (int i = 0; i < cooking.size(); i++) {
            if (cooking.get(i).getOrderNr() == selected) {
                seconds = (cooking.get(i).getTIME_UNTIL_FINISHED() * 1000);
            }
        }

        setLists();

        TimerTask calculateFinishTime = new TimerTask() {
            public void run() {
                lstCooking.setSelectedIndex(selectedIndex);
                lstCooking.setEnabled(true);
                btnFinished.doClick();
                java.awt.Toolkit.getDefaultToolkit().beep();
                timer.cancel();
                timer.purge();
            }
        };

        lstCooking.setEnabled(false);
        timer.schedule(calculateFinishTime, seconds);
        }catch(NullPointerException e){
            
        }
    }//GEN-LAST:event_btnBakeActionPerformed

    public void addOrder(ProcessOrder po) {

        cooking.add(po);
        setLists();
    }

    public void setLists() {
        DefaultListModel cookingListModel = new DefaultListModel();
        DefaultListModel completedListModel = new DefaultListModel();

        try {

            for (ProcessOrder po : cooking) {

                if (po.getOrderNr() == this.currentlyBaking) {
                    cookingListModel.addElement(po.getOrderNr() + " (Tillagas Nu) ");
                } else {
                    cookingListModel.addElement(po.getOrderNr());
                }
            }

            lstCooking.setModel(cookingListModel);
            lstCooking.setSelectedIndex(0);

            for (ProcessOrder po : completed) {
                completedListModel.addElement(po.getOrderNr());
            }

            lstFinished.setModel(completedListModel);
        } catch (Exception e) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BakerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BakerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BakerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BakerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BakerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBake;
    private javax.swing.JButton btnFinished;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstCooking;
    private javax.swing.JList lstFinished;
    // End of variables declaration//GEN-END:variables
}
